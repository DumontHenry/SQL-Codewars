Easy SQL: Convert to Hexadecimal:
SELECT to_hex(legs) as legs,
to_hex(arms) as arms
from monsters;

Easy SQL: Rounding Decimals:
SELECT
  FLOOR(number1) as number1,
  CEIL(number2) as number2
FROM decimals;

SQL Basics: Mod:
SELECT MOD(number1, number2)
FROM decimals

Easy SQL - Ordering:
SELECT *
FROM companies
ORDER BY employees DESC

Easy SQL: LowerCase:
SELECT id, name, birthday, Lower(race) as race
FROM demographics

Collect Tuition (SQL for Beginners #4):
SELECT * 
FROM students
WHERE tuition_received = false

Register for the Party (SQL for Beginners #3):
INSERT INTO participants VALUES ('Paul', 18, true);
SELECT * FROM participants;

On the Canadian Border (SQL for Beginners #2):
SELECT name, country
FROM travelers
WHERE country NOT IN ('USA', 'Canada', 'Mexico')

Adults only (SQL for Beginners #1):
SELECT name,age 
FROM users
WHERE age>=18

1. Find all active students:
SELECT * FROM students
WHERE IsActive =1;

SQL Basics: Simple MIN / MAX :
SELECT MIN(age) as age_min,MAX(age) as age_max  FROM people;

SQL Basics: Simple SUM:
SELECT SUM(age) as age_sum FROM people;

SQL Grasshopper: Select Columns:
SELECT custid, custname, custstate FROM customers;

SQL Basics: Simple DISTINCT:
SELECT DISTINCT age
FROM people

SQL Keep Hydrated!:
SELECT  id, hours, Floor(hours/2) as liters
FROM cycling

SQL Opposite number:
Select -number AS res FROM opposite;

SQL Subtract the Sum:
SELECT 'apple' res FROM sub_sum

SQL Beginner Series #2 Clock:
SELECT  ((h*60 + m)*60+ s )*1000 as res
FROM past

SQL Century From Year:
SELECT CEILING(yr/100.00) AS Century
FROM years

SQL Expressions Matter:
SELECT Greatest ( a*(b+c ), a * b * c, (a + b) * c, a + b + c ) AS res FROM expression_matter;

SQL Is n divisible by x and y? :
-- you will be given a table 'kata' with columns 'n', 'x', and 'y'. 
--Return the 'id' and your result in a column named 'res'.

CREATE FUNCTION isDivisible(n int, x int, y int)
RETURNS boolean AS $$
BEGIN
IF (mod(n, x) = 0 AND mod(n, y) = 0) THEN
  RETURN True;
ELSE
  RETURN False;
END IF;
END;
$$ LANGUAGE plpgsql;
SELECt id, isDivisible(n, x, y) AS res FROM kata

SQL Grasshopper - Check for factor:
SELECT
  id,

CASE 
  WHEN base % factor = 0 
    THEN 
      TRUE 
    ELSE 
      FALSE 
END AS res
  
FROM kata

SQL Grasshopper - Messi goals function :
SELECT (la_liga_goals + copa_del_rey_goals + champions_league_Goals) as res
  FROM goals;
  



